name: Build, Push Docker Image, and Deploy via SSH

on:
  push:
    branches: [main]

jobs:
  docker-build-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push FastAPI image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/fastapi-actions-demo:main-latest

  deploy-via-ssh:
    needs: docker-build-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Full Stack via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "🚀 Connecting to server..."

            # 🗄️ Backup .env if exists
            [ -f /opt/fastapi-logging/.env ] && cp /opt/fastapi-logging/.env /tmp/.env.bak

            # ❌ Remove existing project folder to ensure fresh clone
            rm -rf /opt/fastapi-logging

            # 📁 Clone latest code
            git clone --branch main https://github.com/Vreij-Lal/infra.git /opt/fastapi-logging
            if [ $? -ne 0 ]; then
              echo "❌ Failed to clone repo. Exiting."
              exit 1
            fi

            # ♻️ Restore .env
            [ -f /tmp/.env.bak ] && mv /tmp/.env.bak /opt/fastapi-logging/.env

            cd /opt/fastapi-logging

            # 📦 Ensure docker compose is available
            if ! docker compose version &>/dev/null; then
              apt update && apt install -y docker-compose-plugin
            fi

            # 🔧 Rebuild and launch
            docker compose pull
            docker compose down -v
            docker compose up -d --build

            # ✅ Status
            docker ps

            # 🧪 Test health
            curl -s http://localhost:8000 || echo "⚠️ FastAPI not responding"

            echo "🌐 FastAPI: http://${{ secrets.SSH_HOST }}:8000"
            echo "📊 Grafana: http://${{ secrets.SSH_HOST }}:3000"
